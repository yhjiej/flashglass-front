{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/i18n/request.ts"],"sourcesContent":["import { getRequestConfig } from 'next-intl/server'\nimport { routing } from './routing'\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n\t// This typically corresponds to the `[locale]` segment\n\tlet locale = await requestLocale\n\n\t// Ensure that a valid locale is used\n\tif (!locale || !routing.locales.includes(locale as (typeof routing.locales)[number])) {\n\t\tlocale = routing.defaultLocale\n\t}\n\n\treturn {\n\t\tlocale,\n\t\tmessages: (await import(`../messages/${locale}.json`)).default,\n\t}\n})\n"],"names":[],"mappings":";;;AACA;AADA;;;uCAGe,CAAA,GAAA,2OAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACvD,uDAAuD;IACvD,IAAI,SAAS,MAAM;IAEnB,qCAAqC;IACrC,IAAI,CAAC,UAAU,CAAC,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAA6C;QACrF,SAAS,sHAAA,CAAA,UAAO,CAAC,aAAa;IAC/B;IAEA,OAAO;QACN;QACA,UAAU,CAAC;;;;;;;;;kBAAa,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IAC/D;AACD"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/i18n/routing.ts"],"sourcesContent":["import { createNavigation } from 'next-intl/navigation'\nimport { defineRouting } from 'next-intl/routing'\n\nexport const routing = defineRouting({\n\t// A list of all locales that are supported\n\tlocales: ['en', 'fr'],\n\n\t// Used when no locale matches\n\tdefaultLocale: 'fr',\n})\n\n// Lightweight wrappers around Next.js' navigation APIs\n// that will consider the routing configuration\nexport const { Link, redirect, usePathname, useRouter, getPathname } = createNavigation(routing)\n"],"names":[],"mappings":";;;;;;;;AACA;AADA;;;AAGO,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,gBAAa,AAAD,EAAE;IACpC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;KAAK;IAErB,8BAA8B;IAC9B,eAAe;AAChB;AAIO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+OAAA,CAAA,mBAAgB,AAAD,EAAE"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/api/bo/index.ts"],"sourcesContent":["export const BO_BASE_URL = process.env.NEXT_PUBLIC_BO_BASEURL\n"],"names":[],"mappings":";;;AAAO,MAAM"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/api/bo/auth.ts"],"sourcesContent":["import { BO_BASE_URL } from '.'\nimport {\n\tFetchCheckOTPPayload,\n\tFetchForgetPasswordPayload,\n\tFetchLoginPayload,\n\tFetchLoginResponse,\n\tFetchRegisterPayload,\n\tFetchUpdatePasswordPayload,\n\tGlobalSuccessResponse,\n} from './types'\n\nexport async function fetchRefreshToken(fetcher: typeof fetch, payload: { refresh_token: string }) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/refresh`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as FetchLoginResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchLogin', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchLogin(fetcher: typeof fetch, payload: FetchLoginPayload) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as FetchLoginResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchLogin', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchRegister(fetcher: typeof fetch, payload: FetchRegisterPayload) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/register`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as GlobalSuccessResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchRegister', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchForgetPassword(fetcher: typeof fetch, payload: FetchForgetPasswordPayload) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/forgetPassword`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as GlobalSuccessResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchForgetPassword', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchUpdatePassword(fetcher: typeof fetch, payload: FetchUpdatePasswordPayload) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/resetPassword`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as GlobalSuccessResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchForgetPassword', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchResendOTP(fetcher: typeof fetch, payload: { email: string }) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/resendEmailOtp`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as GlobalSuccessResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchResendOtp', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function fetchCheckOTP(fetcher: typeof fetch, payload: FetchCheckOTPPayload) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/auth/verifyOtp`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as GlobalSuccessResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] fetchCheckOtp', error)\n\t\treturn { error }\n\t}\n}\n\nexport async function createRequest(fetcher: typeof fetch, payload: { first_name: string, last_name: string, email: string, phone: string, description?: string, product?: string }) {\n\ttry {\n\t\tconst response = await fetcher(`${BO_BASE_URL}/items/request`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tconst data = (await response.json()) as FetchLoginResponse\n\t\treturn { data }\n\t} catch (error) {\n\t\tconsole.error('[ERROR] create request', error)\n\t\treturn { error }\n\t}\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAWO,eAAe,kBAAkB,OAAqB,EAAE,OAAkC;IAChG,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,aAAa,CAAC,EAAE;YAC7D,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,WAAW,OAAqB,EAAE,OAA0B;IACjF,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,WAAW,CAAC,EAAE;YAC3D,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,cAAc,OAAqB,EAAE,OAA6B;IACvF,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,cAAc,CAAC,EAAE;YAC9D,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,oBAAoB,OAAqB,EAAE,OAAmC;IACnG,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,oBAAoB,CAAC,EAAE;YACpE,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,oBAAoB,OAAqB,EAAE,OAAmC;IACnG,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,mBAAmB,CAAC,EAAE;YACnE,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,eAAe,OAAqB,EAAE,OAA0B;IACrF,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,oBAAoB,CAAC,EAAE;YACpE,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,cAAc,OAAqB,EAAE,OAA6B;IACvF,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,eAAe,CAAC,EAAE;YAC/D,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YAAE;QAAM;IAChB;AACD;AAEO,eAAe,cAAc,OAAqB,EAAE,OAAwH;IAClL,IAAI;QACH,MAAM,WAAW,MAAM,QAAQ,GAAG,yHAAA,CAAA,cAAW,CAAC,cAAc,CAAC,EAAE;YAC9D,QAAQ;YACR,SAAS;gBACR,gBAAgB;YACjB;YACA,MAAM,KAAK,SAAS,CAAC;QACtB;QACA,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;YAAE;QAAK;IACf,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE;QAAM;IAChB;AACD"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/sessions.ts"],"sourcesContent":["'use server'\nimport { fetchRefreshToken } from '@/api/bo/auth'\nimport { redirect } from '@/i18n/routing'\nimport { decodeJwt } from 'jose'\nimport { getLocale } from 'next-intl/server'\nimport { cookies } from 'next/headers'\nimport { NextRequest } from 'next/server'\n\nexport async function setSessionTokenCookie(accessToken: string, refreshToken: string, expires: number): Promise<void> {\n\tconst cookieStore = await cookies()\n\tconst accessTokenexpiresAt = new Date(Date.now() + expires)\n\tconst refreshTokenexpiresAt = new Date(Date.now() + 1000 * 60 * 60 * 24 * 30) // 30 days\n\tcookieStore.set('accessToken', accessToken, {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\texpires: accessTokenexpiresAt,\n\t\tpath: '/',\n\t})\n\tcookieStore.set('refreshToken', refreshToken, {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\texpires: refreshTokenexpiresAt,\n\t})\n}\n\nexport async function deleteSessionTokenCookie(): Promise<void> {\n\tconst cookieStore = await cookies()\n\tcookieStore.set('accessToken', '', {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\tmaxAge: 0,\n\t\tpath: '/',\n\t})\n\tcookieStore.set('refreshToken', '', {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\tmaxAge: 0,\n\t})\n}\n\nexport async function validateSession() {\n\tconst cookieStore = await cookies()\n\tconst accessToken = cookieStore.get('accessToken')?.value\n\tconst refreshToken = cookieStore.get('refreshToken')?.value\n\n\tconst decodedAccessToken = await decodeJwt(accessToken as string)\n\tconst isExpired = decodedAccessToken.exp! < Date.now() / 1000\n\n\tif (isExpired) {\n\t\tif (refreshToken) {\n\t\t\tconst response = await fetchRefreshToken(fetch, { refresh_token: refreshToken })\n\t\t\tif (response?.data?.access_token) {\n\t\t\t\tsetSessionTokenCookie(response.data.access_token, response.data.refresh_token, response.data.expires)\n\t\t\t\t// Access token is not expired and refreshed successfully\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\t// Access token is not expired\n\telse return true\n\n\treturn false\n}\n\nexport async function saveGoogleCredentialsToSession(request: NextRequest) {\n\tconst url = new URL(request.url)\n\tif (url.searchParams?.has('access_token') && url.searchParams?.has('refresh_token') && url.searchParams?.has('expires')) {\n\t\tconst accessToken = url.searchParams?.get('access_token')\n\t\tconst refreshToken = url.searchParams?.get('refresh_token')\n\t\tconst expires = Number(url.searchParams?.get('expires') as string)\n\t\tawait setSessionTokenCookie(accessToken!, refreshToken!, expires)\n\t\treturn true\n\t}\n\treturn false\n}\n\nexport async function checkAuthAction() {\n\tconst cookieStore = await cookies()\n\treturn Boolean(cookieStore.get('accessToken')?.value)\n}\n\nexport async function logoutAction() {\n\tconst locale = await getLocale()\n\tawait deleteSessionTokenCookie()\n\tredirect({\n\t\tlocale,\n\t\thref: '/',\n\t})\n}\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;AAGA;AAAA;AAFA;AACA;AAJA;;;;;;AAQO,eAAe,sBAAsB,WAAmB,EAAE,YAAoB,EAAE,OAAe;IACrG,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD;IAChC,MAAM,uBAAuB,IAAI,KAAK,KAAK,GAAG,KAAK;IACnD,MAAM,wBAAwB,IAAI,KAAK,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,UAAU;;IACxF,YAAY,GAAG,CAAC,eAAe,aAAa;QAC3C,UAAU;QACV,UAAU;QACV,QAAQ,oDAAyB;QACjC,SAAS;QACT,MAAM;IACP;IACA,YAAY,GAAG,CAAC,gBAAgB,cAAc;QAC7C,UAAU;QACV,UAAU;QACV,QAAQ,oDAAyB;QACjC,SAAS;IACV;AACD;AAEO,eAAe;IACrB,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,eAAe,IAAI;QAClC,UAAU;QACV,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ;QACR,MAAM;IACP;IACA,YAAY,GAAG,CAAC,gBAAgB,IAAI;QACnC,UAAU;QACV,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ;IACT;AACD;AAEO,eAAe;IACrB,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD;IAChC,MAAM,cAAc,YAAY,GAAG,CAAC,gBAAgB;IACpD,MAAM,eAAe,YAAY,GAAG,CAAC,iBAAiB;IAEtD,MAAM,qBAAqB,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3C,MAAM,YAAY,mBAAmB,GAAG,GAAI,KAAK,GAAG,KAAK;IAEzD,IAAI,WAAW;QACd,IAAI,cAAc;YACjB,MAAM,WAAW,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE,OAAO;gBAAE,eAAe;YAAa;YAC9E,IAAI,UAAU,MAAM,cAAc;gBACjC,sBAAsB,SAAS,IAAI,CAAC,YAAY,EAAE,SAAS,IAAI,CAAC,aAAa,EAAE,SAAS,IAAI,CAAC,OAAO;gBACpG,yDAAyD;gBACzD,OAAO;YACR;QACD;IACD,OAEK,OAAO;IAEZ,OAAO;AACR;AAEO,eAAe,+BAA+B,OAAoB;IACxE,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,IAAI,IAAI,YAAY,EAAE,IAAI,mBAAmB,IAAI,YAAY,EAAE,IAAI,oBAAoB,IAAI,YAAY,EAAE,IAAI,YAAY;QACxH,MAAM,cAAc,IAAI,YAAY,EAAE,IAAI;QAC1C,MAAM,eAAe,IAAI,YAAY,EAAE,IAAI;QAC3C,MAAM,UAAU,OAAO,IAAI,YAAY,EAAE,IAAI;QAC7C,MAAM,sBAAsB,aAAc,cAAe;QACzD,OAAO;IACR;IACA,OAAO;AACR;AAEO,eAAe;IACrB,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD;IAChC,OAAO,QAAQ,YAAY,GAAG,CAAC,gBAAgB;AAChD;AAEO,eAAe;IACrB,MAAM,SAAS,MAAM,CAAA,GAAA,6NAAA,CAAA,YAAS,AAAD;IAC7B,MAAM;IACN,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD,EAAE;QACR;QACA,MAAM;IACP;AACD"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import createMiddleware from 'next-intl/middleware'\nimport { NextRequest, NextResponse } from 'next/server'\nimport { routing } from './i18n/routing'\nimport { saveGoogleCredentialsToSession } from './lib/sessions'\n\nexport default async function middleware(request: NextRequest) {\n\tconst url = new URL(request.url)\n\t// handle google authentification\n\tif (url?.pathname?.includes('/auth/google/callback')) {\n\t\tconst isSaved = await saveGoogleCredentialsToSession(request)\n\t\tif (isSaved) {\n\t\t\turl.pathname = '/'\n\t\t\turl.search = ''\n\t\t\treturn NextResponse.redirect(url)\n\t\t}\n\t}\n\n\tconst handleI18nRouting = createMiddleware(routing)\n\treturn handleI18nRouting(request)\n}\nexport const config = {\n\t// Match only internationalized pathnames\n\tmatcher: ['/', '/(fr|en)/:path*'],\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAFA;AADA;;;;;AAKe,eAAe,WAAW,OAAoB;IAC5D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,iCAAiC;IACjC,IAAI,KAAK,UAAU,SAAS,0BAA0B;QACrD,MAAM,UAAU,MAAM,CAAA,GAAA,sHAAA,CAAA,iCAA8B,AAAD,EAAE;QACrD,IAAI,SAAS;YACZ,IAAI,QAAQ,GAAG;YACf,IAAI,MAAM,GAAG;YACb,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC9B;IACD;IAEA,MAAM,oBAAoB,CAAA,GAAA,kJAAA,CAAA,UAAgB,AAAD,EAAE,sHAAA,CAAA,UAAO;IAClD,OAAO,kBAAkB;AAC1B;AACO,MAAM,SAAS;IACrB,yCAAyC;IACzC,SAAS;QAAC;QAAK;KAAkB;AAClC"}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}